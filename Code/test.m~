%% Part 6: Coloring Divergent Orbits
clearvars -except c xRange yRange pts bsave
phi = @(z,c) z^2 - c;
a = linspace(-xrange, xrange, pts);
b = linspace(-yrange, yrange, pts);
if (strcmp(colored,'colored'))
M = zeros(length(a), length(b));

for r = 1:length(a)
    for i = 1:length(b)
        clear z;
        z = a(r) + 1i*b(i);
        for j = 1:100
            z = phi( z, c );
            if abs( z ) > maxvalue
                if (strcmp(colored,'colored'))
                    % If the colored option is 'colored', then
                    % color the julia set by the number of 
                    % iterations to converge
                    M(r,i) = j;
                else % otherwise give discrete value
                    M(r,i) = 2;
                end
                break
            end
        end
    end
end
M(M==0) = max(max(M)) + 1;

% Plotting the Diverging orbits
for i = 1:length(c)
    figure(); hold on
    % plot map of diverging orbits
    image( [-xRange(i) xRange(i)], [-yRange(i) yRange(i)], M{i}')
    % Plot formatting below
    axis xy; axis equal; ax = gca;
    ax.XLim = [-xRange(i) xRange(i)]; ax.YLim = [-yRange(i) yRange(i)];
    plot(ax.XLim,[0,0],'LineStyle','--','Color',[.5,.5,.5])
    plot([0,0],ax.YLim,'LineStyle','--','Color',[.5,.5,.5])
    xlabel('\Re','Fontsize',18); ylabel('\Im','Fontsize',18)
    colormap(jet(max(max(M{i})))); colorbar
    hold off
    if bsave == 1 % Save plot to file if bsave = 1
        ssave = strcat('../Figures/ColoredJulia',num2str(i),'.png');
        saveas(gcf,ssave)
    end
end